#### Manual B치sico Streamlit ####

# # Lo que voy a intentar hacer es un cronograma lo m치s sencillo posible de c칩mo instalar y usar Streamlit.

# # Pasos a seguir:

# 1. Instalar Streamlit: pip install streamlit
# 2. Importar la librer칤a: import streamlit as st
# 3. Crear una interfaz b치sica: Uso de st.title(), st.header(), st.text(), etc.
# 4. Agregar widgets interactivos: Uso de st.button(), st.slider(), st.text_input(), etc.
# 5. Mostrar datos y gr치ficos: st.dataframe(), st.bar_chart(), st.pyplot(), etc.
# 6. Ejecutar la aplicaci칩n: streamlit run archivo.py



# 1. Instalar Streamlit

    # Para instalar Streamlit, abrimos una terminal y escribimos:

    # pip install streamlit

    # Para verificar que la instalaci칩n fue correcta, ejecutamos:

    # import streamlit as st
    # st.write("Streamlit est치 instalado correctamente!")

    # O bien podemos escribir en la terminal streamlit --version
    # a lo que deberia devolver la version del stremlit que tenemos descargado...

    # Si no hay errores, la instalaci칩n fue exitosa.


# 2. Importar la librer칤a

    # Antes de empezar a trabajar con Streamlit, importamos la librer칤a:

    # import streamlit as st

# 3. Crear una interfaz b치sica

    # Podemos agregar t칤tulos, encabezados y texto a nuestra aplicaci칩n:

    # st.title("Mi primera app con Streamlit")
    # st.header("Encabezado secundario")
    # st.text("Este es un texto b치sico en Streamlit.")
    

# 4. Agregar widgets interactivos

    # Streamlit permite agregar elementos interactivos muy f치cilmente:

    # if st.button("Presi칩name"):
    #     st.write("춰Bot칩n presionado!")

    # nombre = st.text_input("Ingresa tu nombre")
    # st.write(f"Hola, {nombre}!")

    # valor = st.slider("Selecciona un valor", 0, 100, 50)
    # st.write(f"Valor seleccionado: {valor}")

    # Otros ejemplos serian:
    # opcion = st.selectbox("Selecciona una opci칩n", ["Opci칩n 1", "Opci칩n 2", "Opci칩n 3"])
    # st.write(f"Elegiste: {opcion}")

    # subir_archivo = st.file_uploader("Sube un archivo CSV", type=["csv"])
    # if subir_archivo:
    #     st.write("Archivo cargado exitosamente")

# 5. Mostrar datos y gr치ficos

    # Podemos mostrar datos en tablas y gr치ficos:

    # import pandas as pd ("춰NO SE USAN EN ESTA MATERIA! POR LO QUE LOS ARCHIVOS CSV SE DEBEN CARGAR MANUALMENTE")
    # import numpy as np
    # import matplotlib.pyplot as plt

    # # Crear datos
    # datos = pd.DataFrame(np.random.randn(20, 3), columns=["A", "B", "C"])
    # st.dataframe(datos)  # Mostrar tabla interactiva

    # # Mostrar un gr치fico de barras
    # st.bar_chart(datos)

    # # Mostrar un gr치fico con Matplotlib
    # fig, ax = plt.subplots()
    # ax.plot([1, 2, 3, 4], [10, 20, 15, 25])
    # st.pyplot(fig)

    # Otros ejemplos serian:
    # import plotly.express as px

    # df = pd.DataFrame({
    #     "Categor칤a": ["A", "B", "C", "D"],
    #     "Valores": [10, 20, 15, 25]
    # })

    # fig = px.bar(df, x="Categor칤a", y="Valores", title="Gr치fico interactivo con Plotly")
    # st.plotly_chart(fig)

# 6. Ejecutar la aplicaci칩n

    # Para ver nuestra aplicaci칩n en el navegador, guardamos nuestro archivo como "app.py" (nombre del archivo)
    # y ejecutamos en la terminal:

    # streamlit run app.py

    # Esto abrir치 la aplicaci칩n en el navegador de forma autom치tica.



















# Ejemplos(Para correrlos copienlos y ponglaos en un archivo nuevo!!!):
# 1. Esto es un ejmeplo basico de como funciona...
import streamlit as st

st.title("Hello, world!")
st.write("Esta es mi primera aplicaci칩n web en Python con Streamlit.")


# 2. Ejemplo basico de como funciona dado por la pagina oficial de matplotlib.

import streamlit as st

st.title("Hello Streamlit-er 游녦")
st.markdown(
    """ 
    This is a playground for you to try Streamlit and have fun. 

    **There's :rainbow[so much] you can build!**
    
    We prepared a few examples for you to get started. Just 
    click on the buttons above and discover what you can do 
    with Streamlit. 
    """
)

if st.button("Send balloons!"):
    st.balloons()

    
#  3. El codigo ahora crea unapagina que tiene dos botones interactivos uno en el cual ingresamos
#  un nombre ( el de la persona) y luego eligue una edad (numero entero, mayor a 0 y menor a 101).
#   Nos devuelve la edad que tendremos en 10 a침os.

import streamlit as st

st.title("Calculadora de Edad")

nombre = st.text_input("Ingresa tu nombre")
edad = st.number_input("Ingresa tu edad", min_value=1, max_value=100)

if st.button("Mostrar mensaje"):
    st.write(f"Hola {nombre}, en 10 a침os tendr치s {edad + 10} a침os.")


# 4. Devuelve una pagina con la funcion seno. Usamos numpy.

import streamlit as st
import matplotlib.pyplot as plt
import numpy as np

st.title("Gr치fico de una Funci칩n Seno")

x = np.linspace(0, 10, 100)
y = np.sin(x)

fig, ax = plt.subplots()
ax.plot(x, y)

st.pyplot(fig)



#  5. Esta pagina lo que hace es generar un boton interactivo con el usuario que al presionarlo uno 
# puede entrar a los archivos de la computadora y buscar un archivo csv el cual sera procesado para 
# crear diferentes graficos de barra (podriamos crear otras cosas...).


import streamlit as st
import csv
import matplotlib.pyplot as plt

st.title(" Carga y visualizaci칩n de un archivo CSV ")

# Subir archivo CSV
archivo = st.file_uploader("Sube un archivo CSV", type=["csv"])

if archivo is not None:
    # Leer el archivo CSV manualmente
    contenido = archivo.read().decode("utf-8").splitlines()
    lector_csv = csv.reader(contenido)
    
    # Convertir los datos en una lista
    datos = list(lector_csv)
    
    # Mostrar primeras filas (m치ximo 5)
    st.write("### Vista previa de los datos:")
    for fila in datos[:6]:  # Se muestran 6 filas: 1 de encabezado + 5 de datos
        st.write(fila)

    # Seleccionar columna para graficar
    columnas = datos[0]  # Encabezados
    seleccion_columna = st.selectbox("Selecciona una columna num칠rica", columnas)

    # Obtener 칤ndice de la columna seleccionada
    indice_columna = columnas.index(seleccion_columna)

    # Extraer valores num칠ricos de la columna (omitiendo el encabezado)
    valores = []
    for fila in datos[1:]:
        try:
            valores.append(float(fila[indice_columna]))
        except ValueError:
            continue  # Ignorar valores no num칠ricos

    # Graficar los datos
    if valores:
        fig, ax = plt.subplots()
        ax.hist(valores, bins=20, color="blue", alpha=0.7)
        ax.set_title(f"Distribuci칩n de {seleccion_columna}")
        ax.set_xlabel(seleccion_columna)
        ax.set_ylabel("Frecuencia")
        st.pyplot(fig)
    else:
        st.write(" No hay datos num칠ricos en la columna seleccionada.")


# 6. Si bien usa pandas, esto es un ejemplo del techo que tiene streamlit (ninguno...usemos la imaginacion)
# Nos devuelve la altura de edificios, casas, etc de un punto eleguido. Elegi la ciudad de San Fransisco
# , si se figan en google erath pueden ver com coincide lo dado en la pagina creada con la vida real. Los
# datos los tomamos de una pagina (oviamente...)


import streamlit as st
import pandas as pd
import numpy as np
import pydeck as pdk

st.write("Streamlit has lots of fans in the geo community. 游깴 It supports maps from PyDeck, Folium, Kepler.gl, and others.")

chart_data = pd.DataFrame(
   np.random.randn(1000, 2) / [50, 50] + [37.76, -122.4],
   columns=['lat', 'lon'])

st.pydeck_chart(pdk.Deck(
    map_style=None,
    initial_view_state=pdk.ViewState(
        latitude=37.76,
        longitude=-122.4,
        zoom=11,
        pitch=50,
    ),
    layers=[
        pdk.Layer(
           'HexagonLayer',
           data=chart_data,
           get_position='[lon, lat]',
           radius=200,
           elevation_scale=4,
           elevation_range=[0, 1000],
           pickable=True,
           extruded=True,
        ),
        pdk.Layer(
            'ScatterplotLayer',
            data=chart_data,
            get_position='[lon, lat]',
            get_color='[200, 30, 0, 160]',
            get_radius=200,
        ),
    ],
))